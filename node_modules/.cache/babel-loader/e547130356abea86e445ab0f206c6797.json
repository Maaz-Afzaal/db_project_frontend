{"ast":null,"code":"var _jsxFileName = \"/home/maazafzaal/maaz/Personal/universityscheduler/web/src/components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { getData } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [userData, setUserData] = useState();\n  const [currentState, setCurrentState] = useState(AppState.SCHEDULE);\n  const [section, setSection] = useState({});\n  const params = useParams();\n  const navigate = useNavigate();\n\n  const getSection = async () => {\n    const {\n      result,\n      error\n    } = await getData(\"/getsection\", \"GET\", {});\n\n    if (error) {\n      alert(\"failed to get section list\");\n    } else {\n      result.message.map((sec, i) => {\n        if (sec.sec_id == userData.sec_id) {\n          setSection({ ...section,\n            sec_name: sec.sec_name,\n            session: sec.session\n          });\n        }\n      });\n    }\n  };\n\n  useEffect(() => {\n    const userDataInLocal = JSON.parse(localStorage.getItem(\"userData\"));\n    setUserData(userDataInLocal);\n\n    if (!userDataInLocal) {\n      alert(userDataInLocal);\n      navigate(\"/login\");\n    }\n  }, []);\n  useEffect(() => {\n    getSection();\n  }, [userData]);\n\n  const handleAddQuiz = e => {\n    e.preventDefault();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboardContainer d-flex\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideBar p-4\",\n      style: {\n        width: \"400px\",\n        background: \"DimGray\",\n        height: \"100vh\",\n        borderRight: \"1px white solid\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name bold whiteText\",\n          children: [userData === null || userData === void 0 ? void 0 : userData.name, \" (\", userData === null || userData === void 0 ? void 0 : userData.p_role, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email bold whiteText\",\n          children: userData === null || userData === void 0 ? void 0 : userData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bold whiteText pointer\",\n            onClick: () => {\n              setCurrentState(AppState.SCHEDULE);\n            },\n            children: \"Schedules:\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 25\n          }, this), section.sec_name, \"(\", section.session, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bold whiteText pointer\",\n          onClick: () => {\n            setCurrentState(AppState.TODO);\n          },\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"P1bdJLo+xw5xcoImigwjXK4i6Q0=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Dashboard;\nexport class AppState {}\nAppState.SCHEDULE = \"schedule\";\nAppState.TODO = \"todo\";\nAppState.CHANGE_SCHEDULE = \"change_shecdule\";\nAppState.ADD_QUIZ = \"add_quiz\";\nAppState.ADD_ASSIGNMENT = \"add_assignment\";\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/maazafzaal/maaz/Personal/universityscheduler/web/src/components/Dashboard.jsx"],"names":["Navigate","useNavigate","useParams","React","useState","useEffect","getData","Dashboard","userData","setUserData","currentState","setCurrentState","AppState","SCHEDULE","section","setSection","params","navigate","getSection","result","error","alert","message","map","sec","i","sec_id","sec_name","session","userDataInLocal","JSON","parse","localStorage","getItem","handleAddQuiz","e","preventDefault","width","background","height","borderRight","name","p_role","email","TODO","CHANGE_SCHEDULE","ADD_QUIZ","ADD_ASSIGNMENT"],"mappings":"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","sourcesContent":["import { Navigate, useNavigate, useParams } from \"react-router-dom\"\nimport React,{useState,useEffect} from \"react\";\nimport { getData } from \"./api\";\n\nconst Dashboard=()=>{\n    const [userData,setUserData]=useState();\n    const [currentState,setCurrentState]=useState(AppState.SCHEDULE);\n    const [section,setSection]=useState({});\n    const params=useParams();\n    const navigate=useNavigate();\n   \n    const getSection=async ()=>{\n        \n        const {result,error}=await getData(\"/getsection\",\"GET\",{})\n        if(error){\n            alert(\"failed to get section list\");\n        }\n        else{\n            result.message.map((sec,i)=>{\n                if(sec.sec_id==userData.sec_id){\n                    setSection({...section,sec_name:sec.sec_name,session:sec.session});\n                }\n            })\n        }\n        \n    }\n\n   \n    useEffect(()=>{\n        const userDataInLocal=JSON.parse(localStorage.getItem(\"userData\"));\n        setUserData(userDataInLocal);\n      \n            if(!userDataInLocal){\n                alert(userDataInLocal)\n                navigate(\"/login\")\n            }\n     \n    },[])\n    useEffect(()=>{\n        getSection();\n    },[userData])\n    const handleAddQuiz=(e)=>{\n        e.preventDefault();\n\n    }\n    return(\n        <div className=\"dashboardContainer d-flex\">\n            <div className=\"sideBar p-4\" style={{width:\"400px\",background:\"DimGray\",height:\"100vh\",borderRight:\"1px white solid\"}}>\n               <div className=\"about\">\n                    <div className=\"name bold whiteText\">\n                        {userData?.name} ({userData?.p_role})\n                    </div>\n                    <div className=\"email bold whiteText\">\n                        {userData?.email}\n                    </div>\n                    \n                </div>\n                <div className=\"tabs\">\n                    <div className=\"section\">\n                        <div className=\"bold whiteText pointer\" onClick={()=>{\n                                setCurrentState(AppState.SCHEDULE)\n                            }}>\n                            Schedules:\n                        </div>\n                        {section.sec_name}({section.session})\n                    </div>\n                    <div className=\"bold whiteText pointer\" onClick={()=>{\n                                setCurrentState(AppState.TODO);\n                            }}>\n                            To Do\n                    </div>\n                   \n                </div>\n            </div>  \n          \n            </div>  \n\n    )\n};\n\nexport class AppState{\n    static SCHEDULE=\"schedule\";\n    static TODO=\"todo\";\n    static CHANGE_SCHEDULE=\"change_shecdule\";\n    static ADD_QUIZ=\"add_quiz\";\n    static ADD_ASSIGNMENT=\"add_assignment\";\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}