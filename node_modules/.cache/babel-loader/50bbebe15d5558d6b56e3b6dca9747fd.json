{"ast":null,"code":"var _jsxFileName = \"/home/maazafzaal/maaz/Personal/universityscheduler/web/src/components/Assignment.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from \"react\";\nimport { getData } from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst Assignment = props => {\n  _s();\n\n  var _allAssignments$messa, _allAssignments$messa2;\n\n  const [insert, setInsert] = useState(false);\n  const [assignmentDetails, setAssignmentDetails] = useState(\"\");\n  const [isProject, setIsProject] = useState(false);\n  const [subjectName, setSubjectName] = useState(\"\");\n  const [sec_id, setSectionId] = useState(props.allSections[0].sec_id);\n  const [allSections, setAllSections] = useState(props.allSections);\n  const [allAssignments, setAllAssignments] = useState([]);\n  const [error, setError] = useState(\"\");\n\n  const handleAssignmentSubmit = async e => {\n    e.preventDefault();\n    const {\n      result,\n      error\n    } = await getData(`/insertassignment`, \"POST\", {\n      assigned_by: props.userData.p_id,\n      is_project: isProject,\n      details: assignmentDetails,\n      subject_name: subjectName,\n      sec_id: sec_id\n    });\n\n    if (error) {\n      setError(JSON.stringify(error));\n    } else if (result) {\n      setError(\"Assignment Added Succesfuly\");\n    }\n  };\n\n  const getAssignments = async () => {\n    const {\n      result,\n      error\n    } = await getData(`/getasignments/${props.userData.p_role == \"teacher\" ? props.userData.p_id : props.userData.sec_id}?role=${props.userData.p_role}`, \"GET\");\n\n    if (error) {\n      setError(JSON.stringify(error));\n    } else if (result) {\n      setAllAssignments(result);\n      console.log(result.message);\n    }\n  };\n\n  useEffect(() => {\n    getAssignments();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [props.isTeacher && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-warning \",\n          onClick: () => {\n            setInsert(true);\n          },\n          children: \"Insert Assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"btn btn-warning ms-3\",\n          onClick: () => {\n            setInsert(false);\n          },\n          children: \"See Assignments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), insert && props.isTeacher && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => {\n          handleAssignmentSubmit(e);\n        },\n        children: [/*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Insert Details\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setAssignmentDetails(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Subject Name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          onChange: e => {\n            setSubjectName(e.target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          children: \"Is Project?\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          value: isProject,\n          onChange: e => setIsProject(!isProject),\n          type: \"checkbox\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n          className: \"m-3\",\n          children: [\"Select Section\", /*#__PURE__*/_jsxDEV(\"select\", {\n            name: \"section\",\n            id: \"section\",\n            onChange: e => {\n              setSectionId(e.target.value);\n            },\n            children: allSections.map((sec, i) => {\n              return /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [allSections.length == 0 && /*#__PURE__*/_jsxDEV(\"input\", {\n                  disabled: true,\n                  placeholder: \"no section in Database\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 71\n                }, this), allSections.length >= 1 && /*#__PURE__*/_jsxDEV(\"option\", {\n                  value: sec.sec_id,\n                  children: [sec.sec_name, \"(\", sec.session, \")\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 75,\n                  columnNumber: 71\n                }, this)]\n              }, void 0, true);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 27\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n          className: \"btn btn-warning\",\n          type: \"submit\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 27\n      }, this)\n    }, void 0, false), !insert && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: (allAssignments === null || allAssignments === void 0 ? void 0 : (_allAssignments$messa = allAssignments.message) === null || _allAssignments$messa === void 0 ? void 0 : _allAssignments$messa.length) > 0 && (allAssignments === null || allAssignments === void 0 ? void 0 : (_allAssignments$messa2 = allAssignments.message) === null || _allAssignments$messa2 === void 0 ? void 0 : _allAssignments$messa2.map((ass, i) => {\n          return /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [ass.is_project && /*#__PURE__*/_jsxDEV(\"h3\", {\n              children: \"Project\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Subject Name:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 37\n              }, this), assignmentDetails.subject_name]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 33\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              children: [/*#__PURE__*/_jsxDEV(\"b\", {\n                children: \"Details:\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 37\n              }, this), assignmentDetails.details]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 33\n            }, this)]\n          }, void 0, true);\n        }))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 86,\n        columnNumber: 17\n      }, this)\n    }, void 0, false), error && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"border border-danger mt-3\",\n      style: {\n        color: \"red\"\n      },\n      children: error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 27\n    }, this)]\n  }, void 0, true);\n};\n\n_s(Assignment, \"dAW3aO2eqOvGPybimbZs48uDvSQ=\");\n\n_c = Assignment;\nexport default Assignment;\n\nvar _c;\n\n$RefreshReg$(_c, \"Assignment\");","map":{"version":3,"sources":["/home/maazafzaal/maaz/Personal/universityscheduler/web/src/components/Assignment.jsx"],"names":["React","useState","useEffect","getData","Assignment","props","insert","setInsert","assignmentDetails","setAssignmentDetails","isProject","setIsProject","subjectName","setSubjectName","sec_id","setSectionId","allSections","setAllSections","allAssignments","setAllAssignments","error","setError","handleAssignmentSubmit","e","preventDefault","result","assigned_by","userData","p_id","is_project","details","subject_name","JSON","stringify","getAssignments","p_role","console","log","message","isTeacher","target","value","map","sec","i","length","sec_name","session","ass","color"],"mappings":"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","sourcesContent":["import React,{useState,useEffect} from \"react\";\nimport { getData } from \"./api\";\n\nconst Assignment=(props)=>{\n\n    const [insert,setInsert]=useState(false);\n    const [assignmentDetails,setAssignmentDetails]=useState(\"\");\n    const [isProject,setIsProject]=useState(false);\n    const [subjectName,setSubjectName]=useState(\"\")\n    const [sec_id,setSectionId]=useState(props.allSections[0].sec_id);\n    const [allSections,setAllSections]=useState(props.allSections);\n    const [allAssignments,setAllAssignments]=useState([]);\n    const [error,setError]=useState(\"\")\n    const handleAssignmentSubmit=async (e)=>{\n        e.preventDefault();\n        const {result,error}=await getData(`/insertassignment`,\"POST\",{\n            assigned_by:props.userData.p_id,\n            is_project:isProject,\n            details:assignmentDetails,\n            subject_name:subjectName,\n            sec_id:sec_id,\n        })\n        if(error){\n            setError(JSON.stringify(error))\n        }\n        else if(result){\n            setError(\"Assignment Added Succesfuly\");\n        }\n    }\n    const getAssignments=async ()=>{\n        const {result,error}=await getData(`/getasignments/${props.userData.p_role==\"teacher\"?props.userData.p_id:props.userData.sec_id}?role=${props.userData.p_role}`,\"GET\");\n        if (error){\n            setError(JSON.stringify(error));\n        }\n        else if(result){\n            setAllAssignments(result);\n            console.log(result.message);\n        }\n    }\n    useEffect(()=>{\n        getAssignments();\n    },[])\n    return(\n        <>\n            {props.isTeacher && <>\n                <div>\n                    <div className=\"btn btn-warning \" onClick={()=>{setInsert(true)}}>Insert Assignment</div>\n                    <div className=\"btn btn-warning ms-3\" onClick={()=>{setInsert(false)}}>See Assignments</div>\n                </div>\n                \n            </>}\n            {\n                    insert && props.isTeacher && <>\n                          <form onSubmit={(e)=>{handleAssignmentSubmit(e)}}>\n                    <label>Insert Details</label>\n                    <input type={\"text\"} onChange={(e)=>{\n                        setAssignmentDetails(e.target.value)\n                    }}/>\n                    <label>Subject Name</label>\n                    <input type={\"text\"} onChange={(e)=>{\n                        setSubjectName(e.target.value)\n                    }}/>\n                    <label>Is Project?</label>\n                    <input value={isProject} onChange={(e)=>setIsProject(!isProject)} type={\"checkbox\"}/>\n                    <label className=\"m-3\">Select Section\n                          <select name=\"section\" id=\"section\" \n                          onChange={(e)=>{\n                     \n                               setSectionId(e.target.value);\n                            }}>\n                                {allSections.map((sec,i)=>{\n                                    return(\n                                        <>\n                                            {allSections.length==0 && <input disabled={true} placeholder=\"no section in Database\"/>}\n                                            {allSections.length>=1 && <option value={sec.sec_id}>{sec.sec_name}({sec.session})</option>}\n                                        </>\n                                    )\n                                })}\n                            \n                                </select></label>\n                    <button className=\"btn btn-warning\" type=\"submit\">Submit</button>\n                </form>\n                    </>\n                }\n                {!insert && <>\n                <div>\n                    {allAssignments?.message?.length>0 && allAssignments?.message?.map((ass,i)=>{\n                        return(\n                            <>\n                                {ass.is_project && \n                                    <h3>Project</h3>\n                                }\n                                <div>\n                                    <b>Subject Name:</b>{assignmentDetails.subject_name}\n                                </div>\n                                <div>\n                                    <b>Details:</b>{assignmentDetails.details}\n                                </div>\n\n                            </>\n                        )\n                    })}\n                </div>\n                </>}\n                 {\n                error &&  <div className=\"border border-danger mt-3\" style={{color:\"red\"}}>\n                {error}</div>\n            }\n        </>\n    )\n}\nexport default Assignment;"]},"metadata":{},"sourceType":"module"}