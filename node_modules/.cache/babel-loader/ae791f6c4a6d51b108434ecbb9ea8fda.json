{"ast":null,"code":"const baseUrl = \"http:localhost:8000\";\nexport const getData = async (path, method, body) => {\n  try {\n    let headers = {\n      \"Content-Type\": \"application/json\",\n      \"Accept\": \"application/json\"\n    };\n    ;\n    const response = await fetch(`${baseUrl}${path}`, {\n      method: `${method}`,\n      headers: headers,\n      body: `${method === \"GET\" ? null : JSON.stringify(body)}`\n    });\n    const json = await response.json();\n\n    if (response.ok) {\n      return {\n        result: json\n      };\n    }\n\n    return {\n      error: json\n    };\n  } catch (error) {\n    return {\n      error\n    };\n  }\n};","map":{"version":3,"sources":["/home/maazafzaal/maaz/Personal/universityscheduler/web/src/components/api.js"],"names":["baseUrl","getData","path","method","body","headers","response","fetch","JSON","stringify","json","ok","result","error"],"mappings":"AAAA,MAAMA,OAAO,GAAC,qBAAd;AACA,OAAO,MAAMC,OAAO,GAAC,OAAOC,IAAP,EAAYC,MAAZ,EAAmBC,IAAnB,KAA0B;AAE9C,MAAI;AACH,QAAIC,OAAO,GAAC;AACF,sBAAgB,kBADd;AAEF,gBAAU;AAFR,KAAZ;AAGQ;AAGR,UAAMC,QAAQ,GAAG,MAAMC,KAAK,CAAE,GAAEP,OAAQ,GAAEE,IAAK,EAAnB,EAAsB;AACjDC,MAAAA,MAAM,EAAG,GAAEA,MAAO,EAD+B;AAEjDE,MAAAA,OAAO,EAAEA,OAFwC;AAGjDD,MAAAA,IAAI,EAAG,GAAED,MAAM,KAAG,KAAT,GAAe,IAAf,GAAoBK,IAAI,CAACC,SAAL,CAAeL,IAAf,CAAqB;AAHD,KAAtB,CAA5B;AAKA,UAAMM,IAAI,GAAG,MAAMJ,QAAQ,CAACI,IAAT,EAAnB;;AACA,QAAGJ,QAAQ,CAACK,EAAZ,EAAe;AACd,aAAO;AAACC,QAAAA,MAAM,EAACF;AAAR,OAAP;AACA;;AAED,WAAO;AAACG,MAAAA,KAAK,EAACH;AAAP,KAAP;AACA,GAlBD,CAkBE,OAAOG,KAAP,EAAc;AACf,WAAO;AAACA,MAAAA;AAAD,KAAP;AACA;AACD,CAvBM","sourcesContent":["const baseUrl=\"http:localhost:8000\"\nexport const getData=async (path,method,body)=>{\n\t\n\ttry {\n\t\tlet headers={\n            \"Content-Type\": \"application/json\",\n            \"Accept\": \"application/json\",\n        };;\n\t\t\n\t\t\t\n\t\tconst response = await fetch(`${baseUrl}${path}`, {\n\t\t\tmethod: `${method}`,\n\t\t\theaders: headers,\n\t\t\tbody: `${method===\"GET\"?null:JSON.stringify(body)}`\n\t\t});\n\t\tconst json = await response.json();\n\t\tif(response.ok){\n\t\t\treturn {result:json};\n\t\t}\n\t\n\t\treturn {error:json};\n\t} catch (error) {\n\t\treturn {error,};\n\t}\n};"]},"metadata":{},"sourceType":"module"}