{"ast":null,"code":"var _jsxFileName = \"/home/maazafzaal/maaz/Personal/universityscheduler/web/src/components/Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport { Navigate, useNavigate, useParams } from \"react-router-dom\";\nimport React, { useState, useEffect } from \"react\";\nimport { getData } from \"./api\";\nimport Schedule from \"./Schedule\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Dashboard = () => {\n  _s();\n\n  const [userData, setUserData] = useState();\n  const [isTeacher, setIsTeacher] = useState(false);\n  const [currentState, setCurrentState] = useState(AppState.SCHEDULE);\n  const [section, setSection] = useState({});\n  const [allSections, setAllSections] = useState();\n  const [loading, setLoading] = useState(true);\n  const params = useParams();\n  const [error, setError] = useState(\"\");\n  const navigate = useNavigate();\n\n  const getSection = async () => {\n    const {\n      result,\n      error\n    } = await getData(\"/getsection\", \"GET\", {});\n\n    if (error) {\n      setError(\"Failed to fetch Section List\");\n    } else if (result) {\n      setAllSections(result.message);\n      result.message.length > 0 && (userData === null || userData === void 0 ? void 0 : userData.sec_id) && result.message.map((sec, i) => {\n        if (sec.sec_id == userData.sec_id) {\n          setSection({ ...section,\n            sec_name: sec.sec_name,\n            session: sec.session\n          });\n        }\n      });\n    }\n\n    setLoading(false);\n  };\n\n  useEffect(() => {\n    const userDataInLocal = JSON.parse(localStorage.getItem(\"userData\"));\n    setUserData(userDataInLocal);\n\n    if (!userDataInLocal) {\n      alert(userDataInLocal);\n      navigate(\"/login\");\n    } else {\n      if (userDataInLocal.p_role === \"teacher\") {\n        getSection();\n        setIsTeacher(true);\n      }\n    }\n  }, []); // useEffect(()=>{\n  //     getSection(); \n  // },[])\n\n  if (loading) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"dashboardContainer d-flex\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sideBar p-4\",\n      style: {\n        width: \"400px\",\n        background: \"DimGray\",\n        height: \"100vh\",\n        borderRight: \"1px white solid\"\n      },\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"about\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"name bold whiteText\",\n          children: [userData === null || userData === void 0 ? void 0 : userData.name, \" (\", userData === null || userData === void 0 ? void 0 : userData.p_role, \")\"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"email bold whiteText\",\n          children: userData === null || userData === void 0 ? void 0 : userData.email\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"tabs\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"section\",\n          children: [!isTeacher && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bold whiteText pointer\",\n              onClick: () => {\n                setCurrentState(AppState.SCHEDULE);\n              },\n              children: \"Section:\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 33\n            }, this), section.sec_name, \"(\", section.session, \")\"]\n          }, void 0, true), isTeacher && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"bold whiteText pointer\",\n              onClick: () => {\n                setCurrentState(AppState.SCHEDULE);\n              },\n              children: \"Schedule\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 29\n            }, this)\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bold whiteText pointer\",\n          onClick: () => {\n            setCurrentState(AppState.TODO);\n          },\n          children: \"To Do\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"bold whiteText pointer\",\n          onClick: () => {\n            setCurrentState(AppState.ASSIGNMENT);\n          },\n          children: \"Assignment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"rightSide\",\n      children: [currentState === AppState.SCHEDULE && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Schedule, {\n          isTeacher: isTeacher,\n          userData: userData,\n          allSections: allSections\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 21\n        }, this)\n      }, void 0, false), error]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Dashboard, \"ACRCna25Fsa0YBFHKKbwLjtBhXY=\", false, function () {\n  return [useParams, useNavigate];\n});\n\n_c = Dashboard;\nexport class AppState {}\nAppState.SCHEDULE = \"schedule\";\nAppState.TODO = \"todo\";\nAppState.ASSIGNMENT = \"assignment\";\nexport default Dashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"Dashboard\");","map":{"version":3,"sources":["/home/maazafzaal/maaz/Personal/universityscheduler/web/src/components/Dashboard.jsx"],"names":["Navigate","useNavigate","useParams","React","useState","useEffect","getData","Schedule","Dashboard","userData","setUserData","isTeacher","setIsTeacher","currentState","setCurrentState","AppState","SCHEDULE","section","setSection","allSections","setAllSections","loading","setLoading","params","error","setError","navigate","getSection","result","message","length","sec_id","map","sec","i","sec_name","session","userDataInLocal","JSON","parse","localStorage","getItem","alert","p_role","width","background","height","borderRight","name","email","TODO","ASSIGNMENT"],"mappings":"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","sourcesContent":["import { Navigate, useNavigate, useParams } from \"react-router-dom\"\nimport React,{useState,useEffect} from \"react\";\nimport { getData } from \"./api\";\nimport Schedule from \"./Schedule\";\nconst Dashboard=()=>{\n    const [userData,setUserData]=useState();\n    const [isTeacher,setIsTeacher]=useState(false);\n    const [currentState,setCurrentState]=useState(AppState.SCHEDULE);\n    const [section,setSection]=useState({});\n    const [allSections,setAllSections]=useState();\n    const [loading,setLoading]=useState(true);\n    const params=useParams();\n    const [error,setError]=useState(\"\");\n    const navigate=useNavigate();\n   \n    const getSection=async ()=>{\n        \n        const {result,error}=await getData(\"/getsection\",\"GET\",{})\n        if(error){\n           setError(\"Failed to fetch Section List\")\n        }\n        else if(result){\n           setAllSections(result.message);\n            result.message.length > 0 && userData?.sec_id && result.message.map((sec,i)=>{\n                if(sec.sec_id==userData.sec_id){\n                    setSection({...section,sec_name:sec.sec_name,session:sec.session});\n                }\n            })\n        }\n        setLoading(false)\n    }\n\n   \n    useEffect(()=>{\n        const userDataInLocal=JSON.parse(localStorage.getItem(\"userData\"));\n        setUserData(userDataInLocal);\n            if(!userDataInLocal){\n                alert(userDataInLocal)\n                navigate(\"/login\")\n            }\n            else{\n                \n                if(userDataInLocal.p_role===\"teacher\"){\n                    getSection(); \n                    setIsTeacher(true);\n                }\n            }\n     \n    },[])\n    // useEffect(()=>{\n    //     getSection(); \n    // },[])\n    if(loading){\n        return(\n            <>\n            </>\n        )\n    }\n    return(\n        <div className=\"dashboardContainer d-flex\">\n            <div className=\"sideBar p-4\" style={{width:\"400px\",background:\"DimGray\",height:\"100vh\",borderRight:\"1px white solid\"}}>\n               <div className=\"about\">\n                    <div className=\"name bold whiteText\">\n                        {userData?.name} ({userData?.p_role})\n                    </div>\n                    <div className=\"email bold whiteText\">\n                        {userData?.email}\n                    </div>\n                    \n                </div>\n                <div className=\"tabs\">\n                    <div className=\"section\">\n                        {\n                            !isTeacher && <>\n                                <div className=\"bold whiteText pointer\" onClick={()=>{\n                                setCurrentState(AppState.SCHEDULE)\n                            }}>\n                            Section:\n                        </div>\n                        {section.sec_name}({section.session})\n                            </>\n                        }\n                        {\n                            isTeacher && <>\n                            <div className=\"bold whiteText pointer\" onClick={()=>{\n                                setCurrentState(AppState.SCHEDULE)\n                            }}>\n                            Schedule\n                        </div>\n                            </>\n                        }\n                        \n                    </div>\n                    <div className=\"bold whiteText pointer\" onClick={()=>{\n                                setCurrentState(AppState.TODO);\n                            }}>\n                            To Do\n                    </div>\n                    <div className=\"bold whiteText pointer\" onClick={()=>{\n                                setCurrentState(AppState.ASSIGNMENT);\n                            }}>\n                            Assignment\n                    </div>\n                   \n                </div>\n            </div>  \n            <div className=\"rightSide\">\n                {\n                    currentState===AppState.SCHEDULE && <>\n                    <Schedule isTeacher={isTeacher} userData={userData} allSections={allSections}/>\n                    </>\n                }\n            {error}\n            </div>\n            \n            </div>  \n\n    )\n};\n\nexport class AppState{\n    static SCHEDULE=\"schedule\";\n    static TODO=\"todo\";\n    static ASSIGNMENT=\"assignment\";\n}\n\nexport default Dashboard;"]},"metadata":{},"sourceType":"module"}